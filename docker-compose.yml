services:
  nginx:
    container_name: nginx
    depends_on:
      - api
    networks:
      - nginx-network

  api:
    container_name: api
    build: api
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - neo4j
    networks:
      - nginx-network
      - db-network

  neo4j:
    container_name: neo4j
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4JLABS_PLUGINS=["apoc"]
    build:
      context: neo4j
      args:
        - NEO4J_USERNAME=${NEO4J_USERNAME}
        - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    networks:
      - db-network

  ftp:
    container_name: ftp
    build:
      context: ftp
      args:
        FTP_USER_HOME: ${FTP_USER_HOME}
    environment: 
      - PUBLICHOST=${SERVER_NAME}
      - FTP_MIN_PORT=${FTP_MIN_PORT}
      - FTP_MAX_PORT=${FTP_MAX_PORT}
    ports:
      - "21:21"
      - "${FTP_MIN_PORT}-${FTP_MAX_PORT}:${FTP_MIN_PORT}-${FTP_MAX_PORT}"

  pg:
    container_name: pg
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - db-network

networks:
  db-network:
    driver: bridge
  nginx-network:
    driver: bridge
